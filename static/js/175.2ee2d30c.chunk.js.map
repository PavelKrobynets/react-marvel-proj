{"version":3,"file":"static/js/175.2ee2d30c.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","components/loader/Loader.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './errorMessage.scss'\n\nexport default function ErrorMessage() { \n\treturn (\n\t\t<div className='errorMessage'>\n\t\t\t\t<img src=\"https://media.tenor.com/8ND8TbjZqh0AAAAi/error.gif\" alt=\"error\" />\n\t\t</div>\n\t);\n}","import \"./comicsList.scss\";\nimport AppBanner from \"../appBanner/AppBanner\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nexport default function ComicsList() {\n  const [comics, setComics] = useState([]);\n  const [comicsLength, setComicsLength] = useState(8);\n\n  const { getAllComics, loadMore, listLoaded, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    loadComicses(comicsLength, false);\n  }, []);\n\n  const loadComicses = (comicsLength, toggler) => {\n    getAllComics(comicsLength, toggler)\n      .then(setComics)\n      .then(() => {\n        setProcess(\"confirmed\");\n      });\n  };\n\n  const addComicsLength = () => {\n    const newComicsLength = comicsLength + 8;\n    setComicsLength(newComicsLength);\n    loadComicses(newComicsLength, true);\n  };\n\n  function renderComicsLsit(comics) {\n    const comicses = comics.map((item) => {\n      return (\n        <li className=\"comics__item\" key={item.id}>\n          <Link to={`/comics/${item.id}`}>\n            <div className=\"comics__item-img\">\n              <img\n                src={item.thumbnail}\n                alt={item.name}\n                style={\n                  item.thumbnail ===\n                  \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n                    ? { height: \"100%\" }\n                    : { objectFit: \"fill\" }\n                }\n              />\n            </div>\n            <div className=\"comics__item-name\">{item.name}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{comicses}</ul>;\n  }\n\n  function showBtn() {\n    if (listLoaded) {\n      return (\n        <button\n          className={`button button__main button__long button__load`}\n          onClick={() => addComicsLength()}\n          style={\n            loadMore === true\n              ? { animation: \"glowing 1300ms infinite\" }\n              : { animation: \"glowing\" }\n          }\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div className=\"comics\">\n      <AppBanner />\n      <div className=\"comics__list\">\n        {setContent(loadMore, process, () => renderComicsLsit(comics))}\n      </div>\n      {showBtn()}\n    </div>\n  );\n}\n","import ComicsList from \"../comicsList/ComicsList\";\nimport {Helmet} from \"react-helmet\"\n\nexport default function ComicsPage() { \n\treturn (\n\t<>\n\t<Helmet>\n\t\t\t<meta \n\t\t\tname=\"description\"\n\t\t\tcontent=\"Page with comics list\"\n\t\t\t/>\n\t\t\t<title>Marvel comics list</title>\n\t\t</Helmet>\n\t<ComicsList />\n\t</>\t\n)\n}","import { useState } from \"react\";\nimport useHttp from \"../hooks/http.hook\";\n\nexport default function useMarvelService() {\n  const { request, clearError, process, setProcess } = useHttp();\n  const [loadMore, setLoadMore] = useState(false);\n  const [listLoaded, setListLoaded] = useState(false);\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _key = \"apikey=44c2cf8b8380798bbd06178bc0325db8\";\n  const _baseLimit = 9;\n  console.log(\"API Base URL:\", _apiBase);\n  console.log(\"API Key:\", _key);\n\n  // Character block\n\n  const getAllCharacters = async (limit = _baseLimit, toggler) => {\n    setLoadMore(toggler);\n    const res = await request(\n      `${_apiBase}characters?limit=${limit}&offset=210&${_key}`\n    );\n    setLoadMore(false);\n    setListLoaded(true);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_key}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_key}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const _transformCharacter = (char) => {\n    const description =\n      char.description !== \"\"\n        ? char.description.slice(0, 140) + \"...\"\n        : \"Hero have no description\";\n    return {\n      id: char.id,\n      name: char.name,\n      description: description,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  // Comics block\n  const getAllComics = async (limit = _baseLimit, toggler) => {\n    setLoadMore(toggler);\n    const res = await request(\n      `${_apiBase}comics?limit=${limit}&offset=2&${_key}`\n    );\n    setLoadMore(false);\n    setListLoaded(true);\n    return res.data.results.map(_transformComic);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_key}`);\n    return _transformComic(res.data.results[0]);\n  };\n\n  const _transformComic = (comic) => {\n    return {\n      id: comic.id,\n      name: comic.title,\n      thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\n      price: comic.prices[0].price\n        ? `${comic.prices[0].price}$`\n        : \"not available\",\n      description: comic.description || \"There is no description\",\n      pageCount: comic.pageCount\n        ? `${comic.pageCount} p.`\n        : \"No info about pages\",\n      language: comic.textObjects.language || \"en-us\",\n    };\n  };\n\n  return {\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getAllComics,\n    getComic,\n    loadMore,\n    listLoaded,\n    getCharacterByName,\n    process,\n    setProcess,\n  };\n}\n","import { useState, useCallback } from \"react\";\n\nexport default function useHttp() {\n  const [process, setProcess] = useState(\"waiting\");\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      clearError();\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n        });\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const data = await response.json();\n        return data;\n      } catch (err) {\n        setProcess(\"error\");\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n\t\tsetProcess('loading')\n  }, []);\n\n  return {request, clearError, process, setProcess };\n}\n","import \"./loader.scss\"\n\nexport default function Loader() { \n\treturn (\n\t\t<div className=\"loader\">\n\t\t</div>\n\t);\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Loader from \"../components/loader/Loader\";\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\nimport Skeleton from \"../components/skeleton/Skeleton\";\n\nexport default function setContent (loadMore ,process, Component, data) {\n\tswitch (process) {\n\t\tcase \"waiting\":\n\t\t\treturn <Skeleton />;\n\n\t\tcase \"loading\":\n\t\t\treturn loadMore ? <Component {...data} /> : <Loader/>;\n\n\t\tcase \"confirmed\":\n\t\t\treturn <Component {...data} />;\n\n\t\tcase \"error\":\n\t\t\treturn <ErrorMessage />;\n\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected process state\")\n\t}\n};"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","ComicsList","comics","setComics","useState","comicsLength","setComicsLength","getAllComics","loadMore","listLoaded","process","setProcess","useMarvelService","useEffect","loadComicses","toggler","then","setContent","comicses","map","item","Link","to","concat","id","thumbnail","name","style","height","objectFit","price","renderComicsLsit","onClick","addComicsLength","newComicsLength","animation","ComicsPage","_Fragment","Helmet","content","request","clearError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","statusText","json","err","useHttp","setLoadMore","setListLoaded","_apiBase","_key","console","log","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","items","_transformComic","comic","title","prices","pageCount","language","textObjects","getAllCharacters","limit","res","data","results","getCharacter","getComic","getCharacterByName","Loader","Skeleton","Component"],"sourceRoot":""}