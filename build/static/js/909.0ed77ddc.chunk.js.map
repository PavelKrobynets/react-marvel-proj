{"version":3,"file":"static/js/909.0ed77ddc.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchFrom.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js","components/loader/Loader.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import './errorMessage.scss'\n\nexport default function ErrorMessage() { \n\treturn (\n\t\t<div className='errorMessage'>\n\t\t\t\t<img src=\"https://media.tenor.com/8ND8TbjZqh0AAAAi/error.gif\" alt=\"error\" />\n\t\t</div>\n\t);\n}","import { useState, useEffect } from \"react\";\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nexport default function RandomChar() {\n  const [char, setCahr] = useState({});\n\n  const {getCharacter, clearError , process, setProcess} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // IT CAUSES CHAR LOADING 2 TIMES (Strict mode)\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setCahr(char);\n  };\n\n  const updateChar = () => {\n\t\tclearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded).then(() => {setProcess(\"confirmed\")})\n  };\n\n  return (\n    <div className=\"randomchar\">\n      {setContent(false, process, View, char)}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\" onClick={updateChar}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n}\n\nconst View = ({ name, description, thumbnail, homepage, wiki }) => {\n  const defImgUrl =\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n  \n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={\n          thumbnail === defImgUrl\n            ? { objectFit: \"fill\" }\n            : { objectFit: \"cover\" }\n        }\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nexport default function CharList(props) {\n  const [charList, setCharList] = useState([]),\n    [charLength, setCharLength] = useState(9);\n\n  const {\n    getAllCharacters,\n    loadMore,\n    listLoaded,\n    process,\n    setProcess,\n  } = useMarvelService();\n\n  useEffect(() => {\n    loadCharacters(charLength, false);\n  }, []);\n\n  const loadCharacters = (charLength, toggler) => {\n    getAllCharacters(charLength, toggler).then(setCharList).then(() => setProcess(\"confirmed\"))\n  };\n\n  const addCharLength = () => {\n    const newCharLength = charLength + 9;\n    setCharLength(newCharLength);\n    loadCharacters(newCharLength, true);\n    console.log(\"loaded\");\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(charList) {\n    const maxChar = charLength;\n    const items = charList\n      .map((item, i) => {\n        const defImgUrl =\n          \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n        return (\n          <li\n            className=\"char__item\"\n            key={item.id}\n            ref={(el) => (itemRefs.current[i] = el)}\n            onClick={(e) => {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }}\n            onKeyDownCapture={(e) => {\n              if (e.key === \" \" || e.key === \"Enter\") {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }\n            }}\n          >\n            <img\n              src={item.thumbnail}\n              alt=\"abyss\"\n              style={\n                item.thumbnail === defImgUrl\n                  ? { objectFit: \"fill\" }\n                  : { objectFit: \"cover\" }\n              }\n            />\n            <div className=\"char__name\">{item.name}</div>\n          </li>\n        );\n      })\n      .slice(0, maxChar);\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  function showBtn() {\n    if (listLoaded) {\n      return (\n        <button\n          className={`button button__main button__long button__load`}\n          onClick={() => addCharLength()}\n          style={\n            loadMore === true\n              ? { animation: \"glowing 1300ms infinite\" }\n              : { animation: \"glowing\" }\n          }\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      );\n    }\n    return null;\n  }\n\n\n  return (\n    <div className=\"char__list\">\n      {setContent(loadMore ,process, () => renderItems(charList))}\n      {showBtn()}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./charInfo.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nfunction CharInfo(props) {\n  const [char, setChar] = useState(null);\n  const { getCharacter, clearError, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    console.log(\"change\");\n  }, [props.charId]);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded).then(() => setProcess(\"confirmed\"))\n  };\n\n\n  // const errorMessage = error ? <ErrorMessage /> : null;\n  // const loader = loading ? <Loader /> : null;\n  // const skeleton = char || error || loading ? null : <Skeleton />;\n  // const content = !(loading || error || !char) ? <View {...char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {setContent(false ,process, View, char)}\n    </div>\n  );\n}\n\nconst View = ({ name, description, thumbnail, homepage, wiki, comics }) => {\n  const comicsList = <ComicsItem comics={comics} />,\n    image =\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img\n          src={thumbnail}\n          alt=\"abyss\"\n          style={\n            thumbnail === image ? { objectFit: \"fill\" } : { objectFit: \"cover\" }\n          }\n        />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length === 0 ? \"No comics with this character\" : comicsList}\n      </ul>\n    </>\n  );\n};\n\nconst ComicsItem = ({ comics }) => {\n  const maxItems = 10;\n  const comicsLi = comics\n    .map((item, i) => {\n      return (\n        <li className=\"char__comics-item\" key={i}>\n          {item.name}\n        </li>\n      );\n    })\n    .slice(0, maxItems);\n  return comicsLi;\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\t\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { Link } from \"react-router-dom\";\nimport \"./charSearchFrom.scss\";\n\nexport default function CharSearchFrom() {\n  const [char, setChar] = useState(null);\n  const { getCharacterByName} = useMarvelService();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (name) => {\n    getCharacterByName(name.name).then(setChar);\n\t\tconsole.log(errors);\n\t}\n\n  const results = !char ? null : char.length > 0 ?\n                    <div className=\"char__search-wrapper\">\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                            <div className=\"inner\">To page</div>\n                        </Link>\n                    </div> : \n                    <div className=\"char__search-error\">\n                        The character was not found. Check the name and try again\n                    </div>;\n\n  return (\n    <div className=\"char__search-form\">\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n      <label htmlFor=\"name\" className=\"char__search-label\">Or find character by name:</label>\n      <div className=\"char__search-wrapper\">\n\t\t\t<input\n        placeholder=\"Enter character name\"\n        {...register(\"name\", {\n          required: true,\n          minLength: { value: 3, message: \"Char name should be longer than 3 symbols\" },\n        })}\n      />\n\t\t\t<button type=\"submit\" className=\"button button__main\">\n\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t</div>\n      {errors.name ? <div className=\"char__search-error\">{errors.name.message}</div> : null}\n    </form>\n\t\t{results}\n\t\t</div>\n  );\n}\n","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\"\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport CharSearchFrom from \"../charSearchForm/CharSearchFrom\";\n\n\nexport default function MainPage() {\n\n\tconst [selectedChar, setSelectedChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setSelectedChar(id);\n  };\n\n  return (\n    <>\n\t\t<Helmet>\n\t\t\t<meta name=\"description\"/>\n\t\t\t<title>Marvel information portal</title>\n\t\t</Helmet>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <div className=\"char__info-block\">\n\t\t\t\t<ErrorBoundary>\n          <CharInfo charId={selectedChar} />\n        </ErrorBoundary>\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharSearchFrom/>\n\t\t\t\t</ErrorBoundary>\n      </div>\n\t\t\t\t</div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport useHttp from \"../hooks/http.hook\";\n\nexport default function useMarvelService() {\n  const { request, clearError, process, setProcess } = useHttp();\n  const [loadMore, setLoadMore] = useState(false);\n  const [listLoaded, setListLoaded] = useState(false);\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _key = \"apikey=44c2cf8b8380798bbd06178bc0325db8\";\n  const _baseLimit = 9;\n  console.log(\"API Base URL:\", _apiBase);\n  console.log(\"API Key:\", _key);\n\n  // Character block\n\n  const getAllCharacters = async (limit = _baseLimit, toggler) => {\n    setLoadMore(toggler);\n    const res = await request(\n      `${_apiBase}characters?limit=${limit}&offset=210&${_key}`\n    );\n    setLoadMore(false);\n    setListLoaded(true);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_key}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_key}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const _transformCharacter = (char) => {\n    const description =\n      char.description !== \"\"\n        ? char.description.slice(0, 140) + \"...\"\n        : \"Hero have no description\";\n    return {\n      id: char.id,\n      name: char.name,\n      description: description,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  // Comics block\n  const getAllComics = async (limit = _baseLimit, toggler) => {\n    setLoadMore(toggler);\n    const res = await request(\n      `${_apiBase}comics?limit=${limit}&offset=2&${_key}`\n    );\n    setLoadMore(false);\n    setListLoaded(true);\n    return res.data.results.map(_transformComic);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_key}`);\n    return _transformComic(res.data.results[0]);\n  };\n\n  const _transformComic = (comic) => {\n    return {\n      id: comic.id,\n      name: comic.title,\n      thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\n      price: comic.prices[0].price\n        ? `${comic.prices[0].price}$`\n        : \"not available\",\n      description: comic.description || \"There is no description\",\n      pageCount: comic.pageCount\n        ? `${comic.pageCount} p.`\n        : \"No info about pages\",\n      language: comic.textObjects.language || \"en-us\",\n    };\n  };\n\n  return {\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getAllComics,\n    getComic,\n    loadMore,\n    listLoaded,\n    getCharacterByName,\n    process,\n    setProcess,\n  };\n}\n","import { useState, useCallback } from \"react\";\n\nexport default function useHttp() {\n  const [process, setProcess] = useState(\"waiting\");\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      clearError();\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n        });\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const data = await response.json();\n        return data;\n      } catch (err) {\n        setProcess(\"error\");\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n\t\tsetProcess('loading')\n  }, []);\n\n  return {request, clearError, process, setProcess };\n}\n","import \"./loader.scss\"\n\nexport default function Loader() { \n\treturn (\n\t\t<div className=\"loader\">\n\t\t</div>\n\t);\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Loader from \"../components/loader/Loader\";\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\nimport Skeleton from \"../components/skeleton/Skeleton\";\n\nexport default function setContent (loadMore ,process, Component, data) {\n\tswitch (process) {\n\t\tcase \"waiting\":\n\t\t\treturn <Skeleton />;\n\n\t\tcase \"loading\":\n\t\t\treturn loadMore ? <Component {...data} /> : <Loader/>;\n\n\t\tcase \"confirmed\":\n\t\t\treturn <Component {...data} />;\n\n\t\tcase \"error\":\n\t\t\treturn <ErrorMessage />;\n\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected process state\")\n\t}\n};"],"names":["ErrorMessage","_jsx","className","children","src","alt","RandomChar","char","setCahr","useState","getCharacter","clearError","process","setProcess","useMarvelService","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","_jsxs","setContent","View","onClick","mjolnir","_ref","name","description","thumbnail","homepage","wiki","style","objectFit","href","CharList","props","charList","setCharList","charLength","setCharLength","getAllCharacters","loadMore","listLoaded","loadCharacters","toggler","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","maxChar","items","map","i","ref","el","e","onCharSelected","onKeyDownCapture","key","slice","renderItems","addCharLength","newCharLength","console","log","animation","comics","comicsList","ComicsItem","_Fragment","length","_ref2","setChar","charId","ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","errorInfo","this","setState","render","CharSearchFrom","getCharacterByName","register","handleSubmit","formState","errors","useForm","results","Link","to","concat","onSubmit","htmlFor","placeholder","required","minLength","value","message","type","MainPage","selectedChar","setSelectedChar","Helmet","CharInfo","request","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","Error","statusText","json","err","useHttp","setLoadMore","setListLoaded","_apiBase","_key","_transformCharacter","path","extension","urls","_transformComic","comic","title","price","prices","pageCount","language","textObjects","limit","res","data","getAllComics","getComic","Loader","Skeleton"],"sourceRoot":""}